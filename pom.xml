<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>mediation</groupId>
	<artifactId>mediation.app</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<profiles>
		<profile>
			<id>lmi</id>
			<properties>
				<version.service.framework>3.16.2</version.service.framework>
			</properties>
			<dependencyManagement>
				<dependencies>
					<!-- ServiceFrameworkJBossBOM only imports the Service Framework API 
						modules and the service-framework-dist module. No Service Framework implementation 
						module is imported with this BOM. -->
					<dependency>
						<groupId>com.ericsson.oss.itpf.sdk</groupId>
						<artifactId>ServiceFrameworkJBossBOM</artifactId>
						<version>${version.service.framework}</version>
						<type>pom</type>
						<scope>import</scope>
					</dependency>
				</dependencies>
			</dependencyManagement>
			<dependencies>
				<dependency>
					<groupId>com.ericsson.oss.itpf.sdk</groupId>
					<artifactId>service-framework-dist</artifactId>
				</dependency>

				<dependency>
					<groupId>com.ericsson.oss.itpf.sdk</groupId>
					<artifactId>sdk-instrumentation-api</artifactId>
					<scope>provided</scope>
				</dependency>
			</dependencies>
			<build>

				<plugins>
					<plugin>
						<artifactId>maven-war-plugin</artifactId>
						<configuration>
							<warName>${project.parent.artifactId}</warName>
							<failOnMissingWebXml>false</failOnMissingWebXml>
							<webappDirectory>target/${project.parent.artifactId}-${project.version}</webappDirectory>
							<resource>
								<directory>${basedir}/src/main/webapp/WEB-INF</directory>
								<filtering>true</filtering>
								<targetPath>WEB-INF</targetPath>
								<includes>
									<include>*.xml</include>
								</includes>
							</resource>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<version>3.3</version>
						<configuration>
							<source>1.7</source>
							<target>1.7</target>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.jboss.as.plugins</groupId>
						<artifactId>jboss-as-maven-plugin</artifactId>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>
				</plugins>
			</build>

		</profile>
	</profiles>
	<!-- Non-SFW Build Default Profile -->
	<build>
		<plugins>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<warName>${project.parent.artifactId}</warName>
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<webappDirectory>target/${project.parent.artifactId}-${project.version}</webappDirectory>
					<resource>
						<directory>${basedir}/src/main/webapp/WEB-INF</directory>
						<filtering>true</filtering>
						<targetPath>WEB-INF</targetPath>
						<includes>
							<include>*.xml</include>
						</includes>
					</resource>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jboss.as.plugins</groupId>
				<artifactId>jboss-as-maven-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<dependencies>


		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.12</version>
			<scope>provided</scope>
		</dependency>

		<!-- JBoss Remote LIB -->
		<dependency>
			<groupId>org.jboss.xnio</groupId>
			<artifactId>xnio-nio</artifactId>
			<version>3.0.0.CR7</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss</groupId>
			<artifactId>jboss-remote-naming</artifactId>
			<version>1.0.7.Final</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.hornetq</groupId>
			<artifactId>hornetq-jms-client</artifactId>
			<version>2.3.12.Final</version>
			<scope>provided</scope>
		</dependency>

		<!-- While running Remote EJB test, the dependency for 'javaee-api' will 
			cause exception like below: java.lang.ClassFormatError: Absent Code attribute 
			in method that is not native or abstract in Exception Instead, use the concrete 
			maven dependency to resolve this problem. This also applies to remote connection 
			to JMS. -->
		<dependency>
			<groupId>org.jboss.spec.javax.ejb</groupId>
			<artifactId>jboss-ejb-api_3.1_spec</artifactId>
			<version>1.0.1.Final</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<version>1.2</version>
			<scope>provided</scope>
		</dependency>
		<!-- JPA 2.0 dependency -->
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
			<version>1.0.1.Final</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.transaction</groupId>
			<artifactId>jta</artifactId>
			<version>1.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
		</dependency>
		<!-- joda time library -->
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.9.1</version>
		</dependency>

		<!-- <dependency> <groupId>javax</groupId> <artifactId>javaee-api</artifactId> 
			<scope>provided</scope> <version>6.0</version> </dependency> -->
	</dependencies>
</project>